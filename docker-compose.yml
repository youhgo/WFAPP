version: "2"

services:
  reverse_proxy:
    image: "traefik:latest"
    container_name: "wfapp_traefik"
    ports:
      - "443:443"
      - "8080:8080"
    volumes:
      - ./dependencies/traefik/certs:/etc/certs
      - ./dependencies/traefik/config.yml:/etc/traefik/config.yml
      - ./dependencies/traefik/traefik.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - WFAPPNet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik=true"
    depends_on:
      - redis

  redis:
    container_name: 'wfapp_redis'
    image: 'redis:4-alpine'
    ports:
      - '6379:6379'
    expose:
      - '6379'
    networks:
        - WFAPPNet

  wfapp_api:
    build:
      context: api/
      dockerfile: docker_files/Dockerfile
    container_name: "wfapp_api"
    image: wfapp-api
    networks:
      - WFAPPNet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wfapp.rule=Host(`WFAPP.localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.wfapp.tls=true"
      - "traefik.http.services.wfapp.loadbalancer.server.port=8880"
    volumes:
      - /home/hro/Documents/shared:/python-docker/shared_files/

  wfappWorker:
    image: wfapp-worker
    build:
      context: ./DOPPEngine
      dockerfile: DOPP_MODULE/docker_files/Dockerfile
    container_name: "wfapp_worker"
    command : celery -A tasks worker -l info -E -Q parse
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      TOOL_PATH: "/python-docker/DOPP_MODULE/outils"

    volumes:
      - /home/hro/Documents/shared:/python-docker/shared_files/
    depends_on:
      - redis
    networks:
      - WFAPPNet

  web_interface:
    build:
      context: webui/
      dockerfile: docker_files/Dockerfile
    container_name: "wfapp_web"
    image: wfapp-web
    networks:
      - WFAPPNet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wfapp-web.rule=Host(`WFAPP.localhost`) && PathPrefix(`/`)"
      - "traefik.http.routers.wfapp-web.tls=true"
      - "traefik.http.services.wfapp-web.loadbalancer.server.port=80"
    depends_on:
      - wfapp_api
      - reverse_proxy

networks:
    WFAPPNet:

volumes:
  shared_files:

